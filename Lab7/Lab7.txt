Lab 7- In a new console application project create a delegate called FilterDelegate that returns a bool and takes an int as parameter- Create a class called ItemCollection with a private int[] field _items. Initialize it with some values.- Add a method called FilterItems that accepts the delegate type as a parameter and returns an IEnumerable<int>.- The method should in sequence:	- declare a variable result which contains a List<int> that is initially empty.	- Have a foreach statement that iterates over _items	- For each item the delegate should be called. If it returns true, add the item to result.	- return result- In program.cs instantiate ItemCollection and call FilterItems supplying a lambda with filter logic (e.g. i => i%2 == 0)- Capture the IEnumerable that is returned by FilterItems in a variable- WriteLine all results to the console.Advanced:- Apply generics to make the delegate and ItemCollection work with any type. Not just an int.